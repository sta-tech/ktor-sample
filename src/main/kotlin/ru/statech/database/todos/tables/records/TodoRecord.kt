/*
 * This file is generated by jOOQ.
 */
package ru.statech.database.todos.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl

import ru.statech.database.todos.tables.Todo


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TodoRecord() : UpdatableRecordImpl<TodoRecord>(Todo.TODO), Record5<UUID?, String?, String?, OffsetDateTime?, Boolean?> {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var owner: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var dueDate: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var done: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<UUID?, String?, String?, OffsetDateTime?, Boolean?> = super.fieldsRow() as Row5<UUID?, String?, String?, OffsetDateTime?, Boolean?>
    override fun valuesRow(): Row5<UUID?, String?, String?, OffsetDateTime?, Boolean?> = super.valuesRow() as Row5<UUID?, String?, String?, OffsetDateTime?, Boolean?>
    override fun field1(): Field<UUID?> = Todo.TODO.ID
    override fun field2(): Field<String?> = Todo.TODO.TITLE
    override fun field3(): Field<String?> = Todo.TODO.OWNER
    override fun field4(): Field<OffsetDateTime?> = Todo.TODO.DUE_DATE
    override fun field5(): Field<Boolean?> = Todo.TODO.DONE
    override fun component1(): UUID? = id
    override fun component2(): String? = title
    override fun component3(): String? = owner
    override fun component4(): OffsetDateTime? = dueDate
    override fun component5(): Boolean? = done
    override fun value1(): UUID? = id
    override fun value2(): String? = title
    override fun value3(): String? = owner
    override fun value4(): OffsetDateTime? = dueDate
    override fun value5(): Boolean? = done

    override fun value1(value: UUID?): TodoRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): TodoRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): TodoRecord {
        set(2, value)
        return this
    }

    override fun value4(value: OffsetDateTime?): TodoRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Boolean?): TodoRecord {
        set(4, value)
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: String?, value4: OffsetDateTime?, value5: Boolean?): TodoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    constructor(id: UUID? = null, title: String? = null, owner: String? = null, dueDate: OffsetDateTime? = null, done: Boolean? = null): this() {
        this.id = id
        this.title = title
        this.owner = owner
        this.dueDate = dueDate
        this.done = done
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    constructor(value: ru.statech.database.todos.tables.pojos.Todo?): this() {
        if (value != null) {
            this.id = value.id
            this.title = value.title
            this.owner = value.owner
            this.dueDate = value.dueDate
            this.done = value.done
            resetChangedOnNotNull()
        }
    }
}
